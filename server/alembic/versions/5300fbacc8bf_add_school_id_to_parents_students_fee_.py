"""Add school_id to parents, students, fee_types, fee_management

Revision ID: 5300fbacc8bf
Revises: eafbb56cc22f
Create Date: 2025-10-27 11:42:20.724924

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5300fbacc8bf'
down_revision: Union[str, Sequence[str], None] = 'eafbb56cc22f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('unique_teacher_subject_class_active'), table_name='class_teachers', postgresql_where='(is_deleted = false)')
    op.add_column('fee_management', sa.Column('school_id', sa.UUID(), nullable=False))
    op.create_foreign_key(None, 'fee_management', 'schools', ['school_id'], ['school_id'])
    op.add_column('fee_types', sa.Column('school_id', sa.UUID(), nullable=False))
    op.create_foreign_key(None, 'fee_types', 'schools', ['school_id'], ['school_id'])
    op.add_column('parents', sa.Column('school_id', sa.UUID(), nullable=False))
    op.create_foreign_key(None, 'parents', 'schools', ['school_id'], ['school_id'])
    op.add_column('students', sa.Column('school_id', sa.UUID(), nullable=False))
    op.create_foreign_key(None, 'students', 'schools', ['school_id'], ['school_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.drop_column('students', 'school_id')
    op.drop_constraint(None, 'parents', type_='foreignkey')
    op.drop_column('parents', 'school_id')
    op.drop_constraint(None, 'fee_types', type_='foreignkey')
    op.drop_column('fee_types', 'school_id')
    op.drop_constraint(None, 'fee_management', type_='foreignkey')
    op.drop_column('fee_management', 'school_id')
    op.create_index(op.f('unique_teacher_subject_class_active'), 'class_teachers', ['teacher_id', 'subj_id', 'cls_id'], unique=True, postgresql_where='(is_deleted = false)')
    # ### end Alembic commands ###
