"""Initial migration with all models

Revision ID: bde8cfb28f6a
Revises: 
Create Date: 2025-10-22 14:48:33.952411

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bde8cfb28f6a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academic_years',
    sa.Column('academic_id', sa.UUID(), nullable=False),
    sa.Column('academic_name', sa.String(length=255), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('academic_id')
    )
    op.create_index(op.f('ix_academic_years_academic_id'), 'academic_years', ['academic_id'], unique=False)
    op.create_table('fee_types',
    sa.Column('fee_type_id', sa.UUID(), nullable=False),
    sa.Column('fee_type_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.String(length=10), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('fee_type_id')
    )
    op.create_index(op.f('ix_fee_types_fee_type_id'), 'fee_types', ['fee_type_id'], unique=False)
    op.create_table('inventory_management',
    sa.Column('inv_id', sa.UUID(), nullable=False),
    sa.Column('inv_name', sa.String(length=255), nullable=False),
    sa.Column('inv_service', sa.String(length=255), nullable=True),
    sa.Column('inv_desc', sa.Text(), nullable=True),
    sa.Column('inv_date', sa.Date(), nullable=True),
    sa.Column('inv_price', sa.Float(), nullable=True),
    sa.Column('inv_status', sa.String(length=50), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('inv_id')
    )
    op.create_index(op.f('ix_inventory_management_inv_id'), 'inventory_management', ['inv_id'], unique=False)
    op.create_table('logs',
    sa.Column('log_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('user_type', sa.String(length=50), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('table_name', sa.String(length=100), nullable=True),
    sa.Column('record_id', sa.UUID(), nullable=True),
    sa.Column('old_values', sa.Text(), nullable=True),
    sa.Column('new_values', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_logs_log_id'), 'logs', ['log_id'], unique=False)
    op.create_table('parents',
    sa.Column('par_id', sa.UUID(), nullable=False),
    sa.Column('mother_name', sa.String(length=255), nullable=True),
    sa.Column('father_name', sa.String(length=255), nullable=True),
    sa.Column('mother_phone', sa.String(length=20), nullable=True),
    sa.Column('father_phone', sa.String(length=20), nullable=True),
    sa.Column('mother_email', sa.String(length=255), nullable=True),
    sa.Column('father_email', sa.String(length=255), nullable=True),
    sa.Column('par_address', sa.Text(), nullable=True),
    sa.Column('par_type', sa.String(length=50), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('par_id')
    )
    op.create_index(op.f('ix_parents_par_id'), 'parents', ['par_id'], unique=False)
    op.create_table('schools',
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('school_name', sa.String(length=255), nullable=False),
    sa.Column('school_address', sa.Text(), nullable=True),
    sa.Column('school_ownership', sa.String(length=100), nullable=True),
    sa.Column('school_phone', sa.String(length=20), nullable=True),
    sa.Column('school_email', sa.String(length=255), nullable=True),
    sa.Column('school_logo', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('school_id')
    )
    op.create_index(op.f('ix_schools_school_id'), 'schools', ['school_id'], unique=False)
    op.create_table('staff',
    sa.Column('staff_id', sa.UUID(), nullable=False),
    sa.Column('staff_profile', sa.String(length=500), nullable=True),
    sa.Column('staff_name', sa.String(length=255), nullable=False),
    sa.Column('staff_dob', sa.Date(), nullable=True),
    sa.Column('staff_gender', sa.String(length=10), nullable=True),
    sa.Column('staff_nid_photo', sa.String(length=500), nullable=True),
    sa.Column('staff_title', sa.String(length=100), nullable=True),
    sa.Column('staff_role', sa.String(length=100), nullable=True),
    sa.Column('employment_type', sa.String(length=50), nullable=True),
    sa.Column('qualifications', sa.Text(), nullable=True),
    sa.Column('experience', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('staff_id')
    )
    op.create_index(op.f('ix_staff_staff_id'), 'staff', ['staff_id'], unique=False)
    op.create_table('subjects',
    sa.Column('subj_id', sa.UUID(), nullable=False),
    sa.Column('subj_name', sa.String(length=255), nullable=False),
    sa.Column('subj_desc', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('subj_id')
    )
    op.create_index(op.f('ix_subjects_subj_id'), 'subjects', ['subj_id'], unique=False)
    op.create_table('teachers',
    sa.Column('teacher_id', sa.UUID(), nullable=False),
    sa.Column('staff_id', sa.UUID(), nullable=False),
    sa.Column('specialized', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.staff_id'], ),
    sa.PrimaryKeyConstraint('teacher_id')
    )
    op.create_index(op.f('ix_teachers_teacher_id'), 'teachers', ['teacher_id'], unique=False)
    op.create_table('classes',
    sa.Column('cls_id', sa.UUID(), nullable=False),
    sa.Column('cls_name', sa.String(length=255), nullable=False),
    sa.Column('cls_type', sa.String(length=100), nullable=True),
    sa.Column('cls_manager', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['cls_manager'], ['teachers.teacher_id'], ),
    sa.PrimaryKeyConstraint('cls_id')
    )
    op.create_index(op.f('ix_classes_cls_id'), 'classes', ['cls_id'], unique=False)
    op.create_table('classes_to_teachers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('teacher_id', sa.UUID(), nullable=False),
    sa.Column('subj_id', sa.UUID(), nullable=False),
    sa.Column('cls_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['cls_id'], ['classes.cls_id'], ),
    sa.ForeignKeyConstraint(['subj_id'], ['subjects.subj_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.teacher_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_classes_to_teachers_id'), 'classes_to_teachers', ['id'], unique=False)
    op.create_table('students',
    sa.Column('std_id', sa.UUID(), nullable=False),
    sa.Column('par_id', sa.UUID(), nullable=False),
    sa.Column('std_code', sa.UUID(), nullable=True),
    sa.Column('std_name', sa.String(length=255), nullable=False),
    sa.Column('std_dob', sa.String(length=20), nullable=True),
    sa.Column('std_gender', sa.String(length=10), nullable=True),
    sa.Column('previous_school', sa.String(length=255), nullable=True),
    sa.Column('started_class', sa.UUID(), nullable=True),
    sa.Column('current_class', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['current_class'], ['classes.cls_id'], ),
    sa.ForeignKeyConstraint(['par_id'], ['parents.par_id'], ),
    sa.ForeignKeyConstraint(['started_class'], ['classes.cls_id'], ),
    sa.PrimaryKeyConstraint('std_id')
    )
    op.create_index(op.f('ix_students_std_code'), 'students', ['std_code'], unique=True)
    op.create_index(op.f('ix_students_std_id'), 'students', ['std_id'], unique=False)
    op.create_table('assessment_marks',
    sa.Column('ass_mark_id', sa.UUID(), nullable=False),
    sa.Column('std_id', sa.UUID(), nullable=False),
    sa.Column('subj_id', sa.UUID(), nullable=False),
    sa.Column('cls_id', sa.UUID(), nullable=False),
    sa.Column('academic_id', sa.UUID(), nullable=False),
    sa.Column('term', sa.String(length=50), nullable=False),
    sa.Column('ass_avg_mark', sa.Float(), nullable=True),
    sa.Column('ass_mark', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_id'], ['academic_years.academic_id'], ),
    sa.ForeignKeyConstraint(['cls_id'], ['classes.cls_id'], ),
    sa.ForeignKeyConstraint(['std_id'], ['students.std_id'], ),
    sa.ForeignKeyConstraint(['subj_id'], ['subjects.subj_id'], ),
    sa.PrimaryKeyConstraint('ass_mark_id')
    )
    op.create_index(op.f('ix_assessment_marks_ass_mark_id'), 'assessment_marks', ['ass_mark_id'], unique=False)
    op.create_table('exam_marks',
    sa.Column('exam_mark_id', sa.UUID(), nullable=False),
    sa.Column('std_id', sa.UUID(), nullable=False),
    sa.Column('subj_id', sa.UUID(), nullable=False),
    sa.Column('cls_id', sa.UUID(), nullable=False),
    sa.Column('academic_id', sa.UUID(), nullable=False),
    sa.Column('term', sa.String(length=50), nullable=False),
    sa.Column('exam_avg_mark', sa.Float(), nullable=True),
    sa.Column('exam_mark', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_id'], ['academic_years.academic_id'], ),
    sa.ForeignKeyConstraint(['cls_id'], ['classes.cls_id'], ),
    sa.ForeignKeyConstraint(['std_id'], ['students.std_id'], ),
    sa.ForeignKeyConstraint(['subj_id'], ['subjects.subj_id'], ),
    sa.PrimaryKeyConstraint('exam_mark_id')
    )
    op.create_index(op.f('ix_exam_marks_exam_mark_id'), 'exam_marks', ['exam_mark_id'], unique=False)
    op.create_table('fee_management',
    sa.Column('fee_id', sa.UUID(), nullable=False),
    sa.Column('std_id', sa.UUID(), nullable=False),
    sa.Column('fee_type_id', sa.UUID(), nullable=False),
    sa.Column('academic_id', sa.UUID(), nullable=False),
    sa.Column('term', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_id'], ['academic_years.academic_id'], ),
    sa.ForeignKeyConstraint(['fee_type_id'], ['fee_types.fee_type_id'], ),
    sa.ForeignKeyConstraint(['std_id'], ['students.std_id'], ),
    sa.PrimaryKeyConstraint('fee_id')
    )
    op.create_index('idx_fee_management_term', 'fee_management', ['term'], unique=False)
    op.create_index(op.f('ix_fee_management_fee_id'), 'fee_management', ['fee_id'], unique=False)
    op.create_table('fee_management_details',
    sa.Column('fee_detail_id', sa.UUID(), nullable=False),
    sa.Column('std_id', sa.UUID(), nullable=False),
    sa.Column('fee_type_id', sa.UUID(), nullable=False),
    sa.Column('academic_id', sa.UUID(), nullable=False),
    sa.Column('term', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_id'], ['academic_years.academic_id'], ),
    sa.ForeignKeyConstraint(['fee_type_id'], ['fee_types.fee_type_id'], ),
    sa.ForeignKeyConstraint(['std_id'], ['students.std_id'], ),
    sa.PrimaryKeyConstraint('fee_detail_id')
    )
    op.create_index('idx_fee_detail_term', 'fee_management_details', ['term'], unique=False)
    op.create_index(op.f('ix_fee_management_details_fee_detail_id'), 'fee_management_details', ['fee_detail_id'], unique=False)
    op.create_table('students_attendance',
    sa.Column('att_id', sa.UUID(), nullable=False),
    sa.Column('teacher_id', sa.UUID(), nullable=False),
    sa.Column('std_id', sa.UUID(), nullable=False),
    sa.Column('subj_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['std_id'], ['students.std_id'], ),
    sa.ForeignKeyConstraint(['subj_id'], ['subjects.subj_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.teacher_id'], ),
    sa.PrimaryKeyConstraint('att_id')
    )
    op.create_index(op.f('ix_students_attendance_att_id'), 'students_attendance', ['att_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_students_attendance_att_id'), table_name='students_attendance')
    op.drop_table('students_attendance')
    op.drop_index(op.f('ix_fee_management_details_fee_detail_id'), table_name='fee_management_details')
    op.drop_index('idx_fee_detail_term', table_name='fee_management_details')
    op.drop_table('fee_management_details')
    op.drop_index(op.f('ix_fee_management_fee_id'), table_name='fee_management')
    op.drop_index('idx_fee_management_term', table_name='fee_management')
    op.drop_table('fee_management')
    op.drop_index(op.f('ix_exam_marks_exam_mark_id'), table_name='exam_marks')
    op.drop_table('exam_marks')
    op.drop_index(op.f('ix_assessment_marks_ass_mark_id'), table_name='assessment_marks')
    op.drop_table('assessment_marks')
    op.drop_index(op.f('ix_students_std_id'), table_name='students')
    op.drop_index(op.f('ix_students_std_code'), table_name='students')
    op.drop_table('students')
    op.drop_index(op.f('ix_classes_to_teachers_id'), table_name='classes_to_teachers')
    op.drop_table('classes_to_teachers')
    op.drop_index(op.f('ix_classes_cls_id'), table_name='classes')
    op.drop_table('classes')
    op.drop_index(op.f('ix_teachers_teacher_id'), table_name='teachers')
    op.drop_table('teachers')
    op.drop_index(op.f('ix_subjects_subj_id'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_staff_staff_id'), table_name='staff')
    op.drop_table('staff')
    op.drop_index(op.f('ix_schools_school_id'), table_name='schools')
    op.drop_table('schools')
    op.drop_index(op.f('ix_parents_par_id'), table_name='parents')
    op.drop_table('parents')
    op.drop_index(op.f('ix_logs_log_id'), table_name='logs')
    op.drop_table('logs')
    op.drop_index(op.f('ix_inventory_management_inv_id'), table_name='inventory_management')
    op.drop_table('inventory_management')
    op.drop_index(op.f('ix_fee_types_fee_type_id'), table_name='fee_types')
    op.drop_table('fee_types')
    op.drop_index(op.f('ix_academic_years_academic_id'), table_name='academic_years')
    op.drop_table('academic_years')
    # ### end Alembic commands ###
